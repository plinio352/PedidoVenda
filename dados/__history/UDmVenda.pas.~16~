unit UDmVenda;

interface

uses
  System.SysUtils, System.Classes, Data.DBXMySQL, Data.DB, Data.SqlExpr,
  Data.FMTBcd, Datasnap.Provider, Data.DBXCommon;

type
  TdmVenda = class(TDataModule)
    con: TSQLConnection;
    qryCliente: TSQLQuery;
    qryProduto: TSQLQuery;
    qryPedidoGerais_: TSQLQuery;
    qryPedidoProduto: TSQLQuery;
    qryClientecodigo: TIntegerField;
    qryClientenome: TStringField;
    qryClientecidade: TStringField;
    qryClienteuf: TStringField;
    qryProdutocodigo: TIntegerField;
    qryProdutodescricao: TStringField;
    qryPedidoProdutoid: TIntegerField;
    qryPedidoProdutonumero_pedido: TIntegerField;
    qryPedidoProdutocodigo_produto: TIntegerField;
    qryPedidoProdutoquantidade: TIntegerField;
    qryPedidoGerais_numero_pedido: TIntegerField;
    qryPedidoGerais_data_emissao: TDateField;
    qryPedidoGerais_codigo_cliente: TIntegerField;
    dspCliente: TDataSetProvider;
    dspProduto: TDataSetProvider;
    dspPedidoGerais: TDataSetProvider;
    dspPedidoProduto: TDataSetProvider;
    qryLstPedPro: TSQLQuery;
    IntegerField1: TIntegerField;
    IntegerField2: TIntegerField;
    IntegerField3: TIntegerField;
    IntegerField4: TIntegerField;
    qryLstPedProvalor_unitario: TFloatField;
    qryLstPedProvalor_total: TFloatField;
    qryProdutopreco_venda: TFloatField;
    qryPedidoGerais_valor_total: TFloatField;
    qryPedidoProdutovalor_unitario: TFloatField;
    qryPedidoProdutovalor_total: TFloatField;
    qryPedidoProdutoproduto: TStringField;
    qryLstPedGer: TSQLQuery;
    IntegerField5: TIntegerField;
    DateField1: TDateField;
    IntegerField6: TIntegerField;
    FloatField1: TFloatField;
    exPedGer: TSQLDataSet;
    exPedPro: TSQLDataSet;
  private
    { Private declarations }
    Ftransacao: TDBXTransaction;
  public
    { Public declarations }
    procedure BeginTran;
    procedure CommitTran;
    procedure RollbackTran;


  end;

var
  dmVenda: TdmVenda;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TdmVenda }

procedure TdmVenda.BeginTran;
begin
   Self.Ftransacao := con.BeginTransaction(TDBXIsolations.ReadCommitted);
end;

procedure TdmVenda.CommitTran;
begin
   con.CommitFreeAndNil(Self.Ftransacao);
end;

procedure TdmVenda.RollbackTran;
begin
   Self.con.RollbackFreeAndNil(Self.Ftransacao);

end;

end.
